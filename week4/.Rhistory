knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
iris
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
install.packages()
library(ggplot2)
install.packages()
library(data.table)
install.packages()
library(data.table)
install.packages()
install.packages("ggplot2")
library(data.table)
library(ggplot2)
iris
install.packages("data.table")
library(data.table)
library(ggplot2)
iris
install.packages("dplyr")
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) +
geom_bar(fill = "lightblue", colour = "black")
library(ggplot2)
rock
library(ggplot2)
attitude
library(ggplot2)
beaver1
library(ggplot2)
mtcars
library(ggplot2)
WorldPhones
library(ggplot2)
quakes
library(ggplot2)
mtcars
library(ggplot2)
cars
library(ggplot2)
iris
library(ggplot2)
iris3
library(ggplot2)
iris
ggplot(data = iris, aes(x = Species)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = iris, aes(x = Sepal.Length)) +
geom_histogram()
ggplot(data = iris, aes(x = Sepal.Length, y=Sepal.Width)) +
geom_point()
ggplot(data = iris, aes(x = Sepal.Length, y=Sepal.Width)) +
geom_point()
ggplot(data = iris, aes(x = Species,y=Sepal.Length)) +
geom_boxplot()
ggplot(data = iris, aes(x = Species)) +
geom_bar()
ggplot(data = iris, aes(x = Species)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = iris, aes(x = Sepal.Width,y=Sepal.Length,color=Species,size=Petal.Width)) +
geom_point()
ggplot(data = iris, aes(x=Sepal.Length,y = Sepal.Width,color=Species,size=Petal.Width)) +
geom_point()
library(ggplot2)
library(GGally)
install.packages(GGally)
ggplot(data = iris, aes(x=Sepal.Length,y = Sepal.Width)) +
geom_bar()
ggplot(data = iris, aes(x=Sepal.Length,y = Sepal.Width)) +
geom_bar()+
facet_wrap(~ continent)
ggplot(data = iris, aes(x=Sepal.Length,y = Sepal.Width)) +
geom_bar()+
facet_wrap(~ Species)
install.packages(lattice)
install.packages(MASS)
install.packages(MASS)
library(ggplot2)
library(GGally)
install.packages(GGally)
library(ggplot2)
library(GGally)
ggplot(data = iris, aes(x=Sepal.Length,y = Sepal.Width,color=Species,size=Petal.Width)) +
geom_point()
cars
mtcars
comics
AirPassengers
AirPassengers CO2
CO2
CO2
CO2$Treatment
CO2
CO2$Treatment
levels(CO2$Treatment)
CO2$Type
CO2$Plant
levels(CO2$Plant)
table(CO2$Type,CO2$Treatment)
PlantGrowth
Theoph
Titanic
CO2
table(CO2$Plant,CO2$Treatment)
table(CO2$Plant,CO2$Type)
co2
discoveries
movies
library("dplyr")
comics
library("ggplot2")
movies
CO2
comics
cars
gapminder
library(gapminder)
library(gapminder)
gapminder
library(gapminder)
gapminder
gap2007 %>%
group_by(continent) %>%
summarize(sd(lifeExp),#標準差
IQR(lifeExp),#四分位距
n())#數量(不用參數)
library(gapminder)
gapminder%>%
filter(year==2007)%>%
group_by(continent) %>%
summarize(sd(lifeExp),#標準差
IQR(lifeExp),#四分位距
n())#數量(不用參數)
library(gapminder)
gapminder %>%
filter(year==2007)%>%
group_by(continent) %>%
summarize(sd(lifeExp),#標準差
IQR(lifeExp),#四分位距
n())#數量(不用參數)
library(gapminder)
library(dplyr)
gapminder %>%
filter(year==2007)%>%
group_by(continent) %>%
summarize(sd(lifeExp),#標準差
IQR(lifeExp),#四分位距
n())#數量(不用參數)
library(comics)
levels(comics$align)
levels(comics$gender)
email
library(email)
library(ggplot2)
library(dplyr)
library(openintro)
library(ggplot2)
library(dplyr)
data(email)
data(comics)
levels(comics$align)
levels(comics$gender)
data(comics)
#gather(wide_df, my_key, my_val, -col)
bmi_long <- gather(bmi, year,bmi_val, -Country)
library(stringr)
# Trim all leading and trailing whitespace
str_trim(c("   Filip ", "Nick  ", " Jonathan"))
# Pad these strings with leading zeros
str_pad(c("23485W", "8823453Q", "994Z"),width=9,side="left",pad=0)
library(stringr)
# Trim all leading and trailing whitespace
str_trim(c("   Filip ", "Nick  ", " Jonathan"))
# Pad these strings with leading zeros
str_pad(c("23485W", "8823453Q", "994Z"),width=9,side="left",pad=0)
# Make states all uppercase
toupper("states")
# Make to lowercase
tolower("STATES")
library(stringr)
# Trim all leading and trailing whitespace
str_trim(c("   Filip ", "Nick  ", " Jonathan"))
# Pad these strings with leading zeros
str_pad(c("23485W", "8823453Q", "994Z"),width=9,side="left",pad=0)
# Make states all uppercase
toupper("states")
# Make to lowercase
tolower("STATES")
#detect
str_detect(c("banana", "kiwi"), "a")
#replace
str_replace(c("banana", "kiwi"), "a", "o")
library(stringr)
# Trim all leading and trailing whitespace
str_trim(c("   Filip ", "Nick  ", " Jonathan"))
# Pad these strings with leading zeros
str_pad(c("23485W", "8823453Q", "994Z"),width=9,side="left",pad=0)
# Make states all uppercase
toupper("states")
# Make to lowercase
tolower("STATES")
#detect
str_detect(c("banana", "kiwi"), "a")
#replace
str_replace(c("banana", "kiwi"), "a", "o")
# Replace all empty strings in status with NA
social_df$status[social_df$status == ""] <- NA
# Use complete.cases() to see which rows have no missing values
complete.cases(social_df)
# Use na.omit() to remove all rows with any missing values
na.omit(social_df)
library(dplyr)
library(hflights)
library(dplyr)
install.packages("hflights")
library(hflights)
library(dplyr)
library(hflights)
hflights<-tbl_df(hflights)
library(dplyr)
library(hflights)
hflights<-tbl_df(hflights)
hflights
hflights
hflights<-tbl_df(hflights)
hflights
select(hflights ,Origin:Cancelled)
g1<-mutate(hflights,ActualGroundTime=ActualElapsedTime - AirTime)
g1<-mutate(hflights,ActualGroundTime=ActualElapsedTime - AirTime)
head(g1)
g1<-mutate(hflights,TotalTaxi=TaxiIn + TaxiOut,ActualGroundTime=ActualElapsedTime - AirTime,Diff=TotalTaxi-ActualGroundTime)
head(g1)
dtc <- filter(hflights, Cancelled == 1, !is.na(DepDelay))
library(dplyr)
library(hflights)
hflights
dtc <- filter(hflights, Cancelled == 1, !is.na(DepDelay))
arrange(dtc,UniqueCarrier,DepDelay)
library(dplyr)
library(hflights)
hflights
aa <- filter(hflights, UniqueCarrier == "American")
summarise(aa,n_flights=n(),n_canc=sum(Cancelled),avg_delay=mean(ArrDelay,na.rm=TRUE))
aa <- filter(hflights, UniqueCarrier == "AirTran")
summarise(aa,n_flights=n(),n_canc=sum(Cancelled),avg_delay=mean(ArrDelay,na.rm=TRUE))
summarise(hflights,n_flights=n(),n_canc=sum(Cancelled),avg_delay=mean(ArrDelay,na.rm=TRUE))
library(dplyr)
library(hflights)
hflights
library(data.table)
hflights2 <- as.data.table(hflights)
# Set up a connection to the mysql database
my_db <- src_mysql(dbname = "dplyr",
host = "courses.csrrinzqubik.us-east-1.rds.amazonaws.com",
port = 3306,
user = "student",
password = "datacamp")
library(data.table)
hflights2 <- as.data.table(hflights)
# Set up a connection to the mysql database
my_db <- src_mysql(dbname = "dplyr",
host = "courses.csrrinzqubik.us-east-1.rds.amazonaws.com",
port = 3306,
user = "student",
password = "datacamp")
setwd("C:/Users/user/Desktop/R/course/week4")
library(ggplot2)
ggplot(data = ncbirths,
aes(x = cut(weeks, breaks = 5), y = weight)) +
geom_boxplot()
ncbirths
datasets(ncbirths)
library(ggplot2)
ggplot(data = ncbirths,
aes(x = cut(weeks, breaks = 5), y = weight)) +
geom_boxplot()
install.packages(openintro)
install.packages("openintro")
mammals
library(mammals)
library("mammals")
# Scatterplot with coord_trans()
ggplot(data = mammals, aes(x=BodyWt,y=BrainWt)) +
geom_point() +
coord_trans(x = "log10", y = "log10")
require(mammals)
install.packages("mammals")
